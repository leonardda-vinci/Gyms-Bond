<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest\Serverless\V1;

use Twilio\Options;
use Twilio\Values;

/**
 * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
 */
abstract class ServiceOptions {
    /**
     * @param bool $includeCredentials Whether to inject Account credentials into a
     *                                 function invocation context
     * @param bool $uiEditable Whether the Service's properties and subresources
     *                         can be edited via the UI
     * @return CreateServiceOptions Options builder
     */
    public static function create(bool $includeCredentials = Values::NONE, bool $uiEditable = Values::NONE): CreateServiceOptions {
        return new CreateServiceOptions($includeCredentials, $uiEditable);
    }

    /**
     * @param bool $includeCredentials Whether to inject Account credentials into a
     *                                 function invocation context
     * @param string $friendlyName A string to describe the Service resource
     * @param bool $uiEditable Whether the Service resource's properties and
     *                         subresources can be edited via the UI
     * @return UpdateServiceOptions Options builder
     */
    public static function update(bool $includeCredentials = Values::NONE, string $friendlyName = Values::NONE, bool $uiEditable = Values::NONE): UpdateServiceOptions {
        return new UpdateServiceOptions($includeCredentials, $friendlyName, $uiEditable);
    }
}

class CreateServiceOptions extends Options {
    /**
     * @param bool $includeCredentials Whether to inject Account credentials into a
     *                                 function invocation context
     * @param bool $uiEditable Whether the Service's properties and subresources
     *                         can be edited via the UI
     */
    public function __construct(bool $includeCredentials = Values::NONE, bool $uiEditable = Values::NONE) {
        $this->options['includeCredentials'] = $includeCredentials;
        $this->options['uiEditable'] = $uiEditable;
    }

    /**
     * Whether to inject Account credentials into a function invocation context. The default value is `true`.
  